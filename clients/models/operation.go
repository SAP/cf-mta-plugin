// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// Operation operation
// swagger:model Operation

type Operation struct {

	// acquired lock
	AcquiredLock bool `json:"acquiredLock,omitempty"`

	// messages
	Messages OperationMessages `json:"messages"`

	// mta Id
	MtaID string `json:"mtaId,omitempty"`

	// parameters
	Parameters map[string]interface{} `json:"parameters,omitempty"`

	// process Id
	ProcessID string `json:"processId,omitempty"`

	// process type
	ProcessType string `json:"processType,omitempty"`

	// space Id
	SpaceID string `json:"spaceId,omitempty"`

	// started at
	StartedAt strfmt.Date `json:"startedAt,omitempty"`

	// state
	State string `json:"state,omitempty"`

	// user
	User string `json:"user,omitempty"`
}

/* polymorph Operation acquiredLock false */

/* polymorph Operation messages false */

/* polymorph Operation mtaId false */

/* polymorph Operation parameters false */

/* polymorph Operation processId false */

/* polymorph Operation processType false */

/* polymorph Operation spaceId false */

/* polymorph Operation startedAt false */

/* polymorph Operation state false */

/* polymorph Operation user false */

// Validate validates this operation
func (m *Operation) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *Operation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Operation) UnmarshalBinary(b []byte) error {
	var res Operation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
